<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.lingfenglong.spring6.xmlaop"/>

<!--    配置通知类型-->
    <aop:config>
<!--        配置切面类-->
        <aop:aspect ref="logAspect">
            <aop:pointcut id="pointcut" expression="execution(public int com.lingfenglong.spring6.xmlaop.CalculatorImpl.*(int, int))"/>
<!--            前置通知-->
            <aop:before method="beforeMethod" pointcut-ref="pointcut"/>
<!--            后置通知-->
            <aop:after method="afterMethod" pointcut-ref="pointcut"/>
<!--            返回通知-->
            <aop:after-returning method="afterReturningMethod" pointcut-ref="pointcut" returning="res"/>
<!--            异常通知-->
            <aop:after-throwing method="afterThrowingMethod" pointcut-ref="pointcut" throwing="throwable"/>
<!--            环绕通知-->
            <aop:around method="afterAroundMethod" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

</beans>